// Based on tutorials from http://www.rastertek.com
// For core module AG1101A - Programming for Games, DirectX Coursework, University of Abertay, Dundee.
// By Richa Sachdeva, 1304869, M.Sc. Computer Games Technology
////////////////////////////////////////////////////////////////////////////////
// Filename: skydome.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////
//Texture2D shaderTexture;
//SamplerState SampleType;

cbuffer GradientBuffer
{
	float4 apexColor;
	float4 centerColor;
};


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
	float4 domePosition : TEXCOORD0;
//	float2 tex : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 SkyDomePixelShader(PixelInputType input) : SV_TARGET
{
	float height;
	float4 outputColor;
	float4 textureColor;


	// Determine the position on the sky dome where this pixel is located.
	height = input.domePosition.y;

	// The value ranges from -1.0f to +1.0f so change it to only positive values.
	if(height < 0.0)
	{
		height = 0.0f;
	}

	// Determine the gradient color by interpolating between the apex and center based on the height of the pixel in the sky dome.
	outputColor = lerp(centerColor, apexColor, height);

	 // Sample the pixel color from the texture using the sampler at this texture coordinate location.
   // textureColor = shaderTexture.Sample(SampleType, input.tex);

    return outputColor;
}